ncol <- 7:15
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex = 1, startRow=18, endRow=23, colIndex=ncol, header = TRUE)
head(dat)
sum(dat$Zip*dat$Ext, na.rm=T)
?fread
install.packages("XML")
library(data.table)
install.packages("data.table")
library(data.table)
?fread
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "Fdata.csv")
DT <- fread("getdata-data-ss06pid.csv")
pwgtp15 <- DT[,mean(pwgtp15),by=SEX]
pwgtp15
str(DT)
library("swirl")
rm(list=ls())
swirl()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi= TRUE)
install_course_zip("swirl_courses-master.zip", multi= TRUE)
swirl()
install.packages("lazyeval")
swirl()
mydf <- read.csv("path2csv", stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, - time)
-5:20
-[5:20]
-(5:20)
select(-(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
cran
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size (>) 100500, r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version)==TRUE)
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/ 2^20)
mutate(cran3, size_gb = size_mb/ 2^10)
mutate(cran3, size_mb = size/ 2^20, size_gb = size_mb/ 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
quit()
rm(list=ls())
swirl()
library("swirl")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique <- filter(pack_sum, unique<-465)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
View(pack_sum)
help(lm)
rm(list  = ls())
exit()
quit()
load("swirl")
library("swirl")
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-[5:20]
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(v_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_gb = size_mb/2^10)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size*1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summary(by_package)
summary(by_package, mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
set
sat
submit()
submit()
submit()
submit()
submit()
submit()
quit()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
install.packages("ggplot2")
swirl()
install.packages("munsell")
swirl()
head(polluion)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
rug(low)
low
high
hist(ppm, col="green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
subset(pollution, "east")
subset(pollution, region = "east")
east<-subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
west<-subset(pollution, region == "west")
hist(subset(pollution, region == "west")$pm25, col="green")
call(pollution, plot(latitude,pm25))
call("pollution$", plot(latitude,pm25))
call("pollution", plot(latitude,pm25))
info()
call("plot",pollution(latitude,pm25))
call("plot",pollution$latitude,pollution$pm25)
with(pollution, plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude, pollution$ppm, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west<-subset(pollution, region == "west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Devices
plot(eruptions, waiting)
plot(dataset, col="red")
skip()
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file=myplot.pdf)
pdf(file="myplot.pdf")
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(car, plot(speed, dist))
with(cars, plot(speed, dist))
text(cars$speed, max(cars$dist), "SWIRL, rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL, rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL, rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region, data=state,layout=c(4,1))
xyplot(Life.Exp~Income|region, data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
his(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red",main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par('fg')
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main"Wind and Ozone in NYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month==5)
points(col="blue",pch=17)
points(may, col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month !=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch=c(17,8), col=c("blue","red", legend=c("May", "Other Months")))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind),lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar, main="Ozone and Solar Radiation")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar
| Radiation")
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c( 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c( 0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
quit()
unzip("activity.zip", overwrite = TRUE)
allactivity <- read.csv("activity.csv",header = TRUE,sep=",",na.strings = "NA")
unzip("activity.zip", overwrite = TRUE)
setwd("./RepoData_PeerAssessment1")
setwd("./RepData_PeerAssessment1")
open("PA1_template.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
str(allactivity)
allactivity[,sum(steps),by=date]
mean(allactivity[,steps])
testd <- data.frame()
testd <- allactivity
testd <- data.frame()
class(testd)
testd <- allactivity
class(testd)
mean(testd[,steps])
mean(testd[steps,])
testd[,sum(steps),by=date]
mean(testd$steps, by=testd$date)
mean(testd$steps)
mean(allactivity$steps, by=allactivity$date)
mean(allactivity$steps, by=allactivity$date, na.rm = TRUE)
library("swirl")
rm(list=ls())
swirl()
swirl()
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringSAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country ==
| "US" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500 & r_os = "linux-gnu")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
Sys.getlocale("LC_TIME")
Sys.setlocale("en_US.UTF-8")
Sys.setlocale(locale="en_US.UTF-8")
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "en_US.UTF-8")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment< -now()
this_moment<-now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dtl
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes =34, seconds=35)
update(this_moment, hours = 8, minutes =34, seconds=55)
this_moment
update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
now("America/New_York")
now("America/New_York")
nyc<-now("America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <- update(depart, hours = 17, minutes =34)
depart
arrive <- depart+ hours(15) + minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- myd("June 17,2008",tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
quit()
