allactivity$interval[1]
hm("100")
hm("0100")
caltime <- with(allactivity, as.integer(interval/100))
tail(caltime)
caltime[31:40]
caltime[1:20]
caltime <- with(allactivity, hours(as.integer(interval/100))) +
minutes(interval - as.integer(interval/100)*100)
calhour <- with(allactivity, as.integer(interval/100))
calmin <- with(allactivity, interval - calhour*100)
caltime <- as.character(calhour) + ":" + as.character(calmin)
caltime <- as.character(calhour) & ":" & as.character(calmin)
caltime <- paste(as.character(calhour) ,":", as.character(calmin))
caltime <- paste(as.character(calhour) ,":", as.character(calmin), sep = "")
hm(caltime[1])
hm(caltime[24])
datetime <- strptime(paste(allactivity$date,caltime), "%Y-%m-%d %H:%M")
datetime[21:30]
datetime <- strptime(paste(allactivity$date,calhour,calmin), "%Y-%m-%d %H%M")
datetime[21:30]
allAct1 <- data.frame(rawdata,datatime)
allAct1 <- data.frame(allactivity,datatime)
allAct1 <- data.frame(allactivity,datetime)
head(allAct1)
avgInterval <- allactivity %>%
group_by(interval) %>%
summarize(avgStep = mean(steps))
avgInterval <- allactivity %>%
group_by(interval) %>%
summarize(avgStep = mean(steps, na.rm=TRUE))
with(avgInterval, plot(interval,avgStep, type = "l"))
maxInt <- max(avgInterval$avgStep)
maxInt <- avgInterval %>%
filter(avgStep == max(avgStep))
maxInt$avgStep
NArows <- allactivity %>%
nrow(filter(is.na(steps)==TRUE))
NArows <- allactivity %>%
filter(is.na(steps)==TRUE)
NArows <- allactivity %>%
filter(is.na(steps)==TRUE) %>%
nrow()
NAsteps <- allactivity$steps
allacitivity %>%
for(i in 1:nrow())
{
if(is.na(steps))
{
NAsteps[i] <- filter(avgInterval,
interval = interval[i])$avgStep
}
else
{
NAsteps[i] <- steps[i]
}
}
allactivity %>%
for(i in 1:nrow())
{
if(is.na(steps))
{
NAsteps[i] <- filter(avgInterval,
interval = interval[i])$avgStep
}
else
{
NAsteps[i] <- steps[i]
}
}
allactivity %>%
NAsteps <- vector(nrow())
for(i in 1:nrow())
{
if(is.na(steps))
{
NAsteps[i] <- filter(avgInterval,
interval = interval[i])$avgStep
}
else
{
NAsteps[i] <- steps[i]
}
}
allactivity %>%
NAsteps <- vector(nrow())%>%
for(i in 1:nrow())
{
if(is.na(steps))
{
NAsteps[i] <- filter(avgInterval,
interval = interval[i])$avgStep
}
else
{
NAsteps[i] <- steps[i]
}
}
NAsteps <- vector(nrow(allactivity))
allactivity %>%
for(i in 1:nrow())
{
if(is.na(steps))
{
NAsteps[i] <- filter(avgInterval,
interval = interval[i])$avgStep
}
else
{
NAsteps[i] <- steps[i]
}
}
NAsteps <- vector(nrow(allactivity))
for(i in 1:nrow(allactivity))
{
if(is.na(allactivity$steps))
{
NAsteps[i] <- filter(avgInterval,
interval = allactivity$interval[i])$avgStep
}
else
{
NAsteps[i] <- allactivity$steps[i]
}
}
NAsteps <- vector(nrow(allactivity))
for(i in 1:nrow(allactivity))
{
if(is.na(allactivity$steps[i]))
{
NAsteps[i] <- filter(avgInterval,
interval = allactivity$interval[i])$avgStep
}
else
{
NAsteps[i] <- allactivity$steps[i]
}
}
NAsteps <- vector(nrow(allactivity))
for(i in 1:nrow(allactivity))
{
if(is.na(allactivity$steps[i]))
{
NAsteps[i] <- filter(avgInterval,
interval == allactivity$interval[i])$avgStep
}
else
{
NAsteps[i] <- allactivity$steps[i]
}
}
plot(allactivity$interval, NAsteps, type = "l")
plot(allactivity$interval, mean(NAsteps), type = "l")
plot(allactivity$interval, NAsteps)
nrow(is.na(NAsteps))
nrow(!is.na(NAsteps))
anyNA(NAsteps)
anyNA(allactivity$steps)
fullset <- allactivity
fullset$steps <- NAsteps
dailyTotal2 <- fullset %>%
group_by(date) %>%
summarize(sum_steps = sum(steps))
hist(dailyTotal2$sum_step, col="green",
main = "Histogram of Total Number of steps taken per day",
xlab = "Total # of steps taken per day",
breaks = 20)
dailyTotal2 <- fullset %>%
group_by(date) %>%
summarize(sum_steps = sum(steps))
hist(dailyTotal2$sum_step, col="green",
main = "Histogram of Total Number of steps taken per day",
xlab = "Total # of steps taken per day",
breaks = 20)
avg_dailyTotal2 <- mean(dailyTotal2$sum_steps)
med_dailyTotal2 <- median(dailyTotal2$sum_steps)
avg_dailyTotal <- mean(dailyTotal$sum_steps, na.rm = TRUE)
med_dailyTotal <- median(dailyTotal$sum_steps, na.rm = TRUE)
weekdays(fullset$date[1])
wday(fullset$date[1])
allAct1 <- fullset %>% mutate(weekday=ifelse(wday(date)>1 & wday(date)<7,"weekday","weekend"))
library(lattice)
xyplot(steps ~ interval |weekday data=fullset,type = "l", layout = c(1,2))
library(lattice)
xyplot(steps ~ interval | weekday, data=fullset,type = "l", layout = c(1,2))
with(fullset, xyplot(steps~interval|weekday, type = "l", layout=c(1,2)))
fullset <- fullset %>%
mutate(weekday = ifelse(wday(date)>1 & wday(date)<7,
"weekday","weekend"))
library(lattice)
xyplot(steps ~ interval |weekday, data=fullset,type = "l", layout = c(1,2))
fullset <- fullset %>%
mutate(weekday = ifelse(wday(date)>1 & wday(date)<7,
"weekday","weekend"))
avgInterval2 <- fullset %>%
group_by(interval) %>%
summarize(avgStep = mean(steps))
fullset <- fullset %>%
mutate(weekday = ifelse(wday(date)>1 & wday(date)<7,
"weekday","weekend"))
avgInterval2 <- fullset %>%
group_by(interval,weekday) %>%
summarize(avgStep = mean(steps))
library(lattice)
xyplot(avgStep ~ interval |weekday, data=avgInterval2,type = "l", layout = c(1,2))
avgInterval2
plot(avgStep, interval, type = "l")
with(avgInterval2, plot(avgStep, interval, type = "l"))
mean(avgInterval2$avgStep)
max(avgInterval2$avgStep)
avgInterval2 <- fullset %>%
group_by(weekday) %>%
summarize(avgStep = mean(steps))
fullset <- fullset %>%
mutate(weekday = ifelse(wday(date)>1 & wday(date)<7,
"weekday","weekend"))
avgInterval2 <- fullset %>%
group_by(weekday,interval) %>%
summarize(avgStep = mean(steps))
library(lattice)
xyplot(avgStep ~ interval |weekday, data=avgInterval2,type = "l", layout = c(1,2))
library(lattice)
xyplot(avgStep ~ interval |weekday, data=avgInterval2,type = "l", layout = c(1,2), main = "Between weekends and weekdays", xlab = "Number of steps")
library(lattice)
xyplot(avgStep ~ interval |weekday, data=avgInterval2,type = "l", layout = c(1,2), main = "Between weekends and weekdays", ylab = "Number of steps")
library(lattice)
xyplot(avgStep ~ interval |weekday, data=avgInterval2,type = "l", layout = c(1,2), main = "Between weekends and weekdays", xlab = "Time of a day", ylab = "Number of steps")
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
require(knitr)
opts_chunk$set(echo = TRUE, cache = TRUE, cache.path = "cache/", fig.path = "figure/")
library(dplyr)
library(lubridate)
library(lattice)
unzip("activity.zip", overwrite = TRUE)
allActivity <- read.csv("activity.csv",header = TRUE,sep=",",na.strings = "NA", stringsAsFactors = FALSE)
allActivity$date <- as.Date(allActivity$date, "%Y-%m-%d")
dailyTotal <- allActivity %>%
group_by(date) %>%
summarize(sumStep = sum(steps, na.rm = TRUE))
hist(dailyTotal$sumStep, col="green",
main = "Histogram of Total Number of steps taken per day",
xlab = "Total number of steps",
breaks = 20)
avg_dailyTotal <- mean(dailyTotal$sumStep, na.rm = TRUE)
med_dailyTotal <- median(dailyTotal$sumStep, na.rm = TRUE)
intervalMean <- allActivity %>%
group_by(interval) %>%
summarize(avgStep = mean(steps, na.rm = TRUE))
intervalMean %>%
plot(interval,avgStep,
type = "l",
main = "Average number of steps taken per 5-minute interval across all days",
xlab = "5-minute interval",
ylab = "Average number of steps"))
intervalMean %>%
plot(interval,avgStep,
type = "l",
main = "Average number of steps taken per 5-minute interval across all days",
xlab = "5\-minute interval",
ylab = "Average number of steps"))
intervalMean %>%
plot(interval,avgStep,
type = "l",
main = "Average number of steps taken per 5-minute interval across all days",
xlab = "5-minute interval",
ylab = "Average number of steps")
intervalMean %>%
plot(interval,avgStep,
type = "l",
main = "Average number of steps taken per 5-minute interval across all days",
xlab = "5-minute interval",
ylab = "Average number of steps")
with(intervalMean, plot(interval,avgStep,
type = "l",
main = "Average number of steps taken per 5-minute interval across all days",
xlab = "5-minute interval",
ylab = "Average number of steps")
)
intervalmax <- intervalMean %>%
filter(avgStep == max(avgStep))
ctNArows <- allActivity %>%
filter(is.na(steps)==TRUE) %>%
nrow()
with(allActivity,
for(i in 1:nrow())
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(avgInterval,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- $steps[i]
}
}
)
with(allActivity,
for(i in 1:nrow())
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(avgInterval,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
with(allActivity,
for(i in 1:nrow(allActivity))
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(avgInterval,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
with(allActivity,
for(i in 1:nrow(allActivity))
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
Newsteps <- vector()
with(allActivity,
for(i in 1:nrow(allActivity))
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
Newsteps <- vector(nrow(allActivity))
with(allActivity,
for(i in 1:nrow(allActivity))
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
Newsteps <- [1:nrow(allActivity)]
with(allActivity,
for(i in 1:nrow(allActivity))
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
Newsteps <- [1:nrow(allActivity)]
with(allActivity,
for(i in 1:nrow(allActivity))
{
if(is.na(steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == allActivity$interval[i])$avgStep
}
else
{
Newsteps[i] <- steps[i]
}
}
)
Newsteps <- [1:nrow(allActivity)]
for(i in 1:nrow(allActivity))
{
if(is.na(allActivity$steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == allActivity$interval[i])$avgStep
}
else
{
Newsteps[i] <- allActivity$steps[i]
}
}
NewActivity <- allActivity
NewActivity$steps <- Newsteps
dailyTotal2 <- NewActivity %>%
group_by(date) %>%
summarize(sumStep = sum(steps))
hist(dailyTotal2$sumStep, col="red",
main = "Histogram of Total Number of steps taken per day",
xlab = "Total number of steps",
breaks = 20)
avg_dailyTotal2 <- mean(dailyTotal2$sumStep)
med_dailyTotal2 <- median(dailyTotal2$sumStep)
isImpact <- ifelse((avg_dailyTotal == avg_dailyTotal2 |
med_dailyTotal == med_dailyTotal2),
"no", "some")
NewActivity <- NewActivity %>%
mutate(weekday = ifelse(wday(date)>1 & wday(date)<7,
"weekday","weekend"))
intervalMean2 <- NewActivity %>%
group_by(weekday,interval) %>%
summarize(avgStep = mean(steps))
xyplot(avgStep ~ interval |weekday,
data=intervalMean2,type = "l",
layout = c(1,2),
main = "Between weekends and weekdays",
xlab = "Time of a day", ylab = "Number of steps")
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
unzip("activity.zip", overwrite = TRUE)
allActivity <- read.csv("activity.csv",header = TRUE,sep=",",na.strings = "NA", stringsAsFactors = FALSE)
dailyTotal <- allActivity %>%
group_by(date) %>%
summarize(sumStep = sum(steps, na.rm = TRUE))
hist(dailyTotal$sumStep, col="green",
main = "Histogram of Total Number of steps taken per day",
xlab = "Total number of steps",
breaks = 20)
avg_dailyTotal <- mean(dailyTotal$sumStep, na.rm = TRUE)
med_dailyTotal <- median(dailyTotal$sumStep, na.rm = TRUE)
intervalMean <- allActivity %>%
group_by(interval) %>%
summarize(avgStep = mean(steps, na.rm = TRUE))
with(intervalMean, plot(interval,avgStep,
type = "l",
main = "Average number of steps taken per 5-minute interval across all days",
xlab = "5-minute interval",
ylab = "Average number of steps")
)
intervalmax <- intervalMean %>%
filter(avgStep == max(avgStep))
ctNArows <- allActivity %>%
filter(is.na(steps)==TRUE) %>%
nrow()
Newsteps <- [1:nrow(allActivity)]
for(i in 1:nrow(allActivity))
{
if(is.na(allActivity$steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == allActivity$interval[i])$avgStep
}
else
{
Newsteps[i] <- allActivity$steps[i]
}
}
Newsteps <- [1:nrow(allActivity)]
Newsteps <- vector(nrow(allActivity))
Newsteps <- vector(length = nrow(allActivity))
Newsteps <- vector(length = nrow(allActivity))
for(i in 1:nrow(allActivity))
{
if(is.na(allActivity$steps[i]))
{
Newsteps[i] <- filter(intervalMean,
interval == allActivity$interval[i])$avgStep
}
else
{
Newsteps[i] <- allActivity$steps[i]
}
}
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
View(dailyTotal)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
filter(dailySteps, date == allActivity$date[1])
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
getwd()
library(knitr)
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
rm(list=ls())
quit()
